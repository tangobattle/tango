name: release

on:
    push:
        tags:
            - "v*.*.*"

jobs:
    release-win32-x64:
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive

            - uses: pat-s/always-upload-cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      core/target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - uses: actions/setup-node@v1
              with:
                  node-version: 18

            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: x86_64-pc-windows-gnu

            - run: >
                  sudo dpkg --add-architecture i386 &&
                  sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list &&
                  sudo apt-get update &&
                  sudo apt-get install -y --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal wine-stable wine64 wine32:i386 wine64 mingw-w64

            - run: >
                  sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-win32 60 &&
                  sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix 90 &&
                  sudo update-alternatives --config x86_64-w64-mingw32-gcc &&
                  sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-win32 60 &&
                  sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 90 &&
                  sudo update-alternatives --config x86_64-w64-mingw32-g++

            - run: >
                  cd core &&
                  ./get-windows-sdl.sh &&
                  BINDGEN_EXTRA_CLANG_ARGS="--sysroot=/usr/x86_64-w64-mingw32/" cargo build --release --target x86_64-pc-windows-gnu

            - run: >
                  mkdir launcher/bin &&
                  cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll \
                     /usr/lib/gcc/x86_64-w64-mingw32/9.3-posix/*.dll \
                     core/target/x86_64-pc-windows-gnu/release/tango-core.exe \
                     core/target/x86_64-pc-windows-gnu/release/replayview.exe \
                     core/target/x86_64-pc-windows-gnu/release/replaydump.exe \
                     core/target/x86_64-pc-windows-gnu/release/keymaptool.exe \
                     launcher/bin

            - run: >
                  cd launcher &&
                  npm install &&
                  GITHUB_TOKEN="${{ secrets.github_token }}" USE_HARD_LINKS="false" npm run dist:win32-x64 -- --publish always
              env:
                  NODE_OPTIONS: --max-old-space-size=8192

    release-linux-x64:
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive

            - uses: pat-s/always-upload-cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      core/target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - uses: actions/setup-node@v1
              with:
                  node-version: 18

            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: x86_64-unknown-linux-gnu

            - run: >
                  sudo apt-get update -y &&
                  sudo apt-get upgrade -y &&
                  sudo DEBIAN_FRONTEND=noninteractive apt-get install -y alsa build-essential clang cmake curl git libnss3 libsdl2-dev libsdl2-ttf-dev pkgconf sudo

            - run: >
                  cd core &&
                  cargo build --release --target x86_64-unknown-linux-gnu

            - run: >
                  mkdir launcher/bin &&
                  cp core/target/x86_64-unknown-linux-gnu/release/{tango-core,replayview,replaydump,keymaptool} ./launcher/bin/

            - run: >
                  cd launcher &&
                  npm install &&
                  GITHUB_TOKEN="${{ secrets.github_token }}" USE_HARD_LINKS="false" npm run dist:linux -- --publish always
              env:
                  NODE_OPTIONS: --max-old-space-size=8192
